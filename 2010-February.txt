From ducharme at mail.berlios.de  Mon Feb  1 20:48:01 2010
From: ducharme at mail.berlios.de (ducharme at BerliOS)
Date: Mon, 1 Feb 2010 20:48:01 +0100
Subject: [Plearn-commits] r10319 - trunk/plearn/base
Message-ID: <201002011948.o11Jm18T018233@sheep.berlios.de>

Author: ducharme
Date: 2010-02-01 20:48:01 +0100 (Mon, 01 Feb 2010)
New Revision: 10319

Modified:
   trunk/plearn/base/PDate.h
Log:
"CYYMMDD_add_months" -> "add_months_to_date" as this is not restricted to CYYMMDD date format.


Modified: trunk/plearn/base/PDate.h
===================================================================
--- trunk/plearn/base/PDate.h	2010-01-21 23:13:24 UTC (rev 10318)
+++ trunk/plearn/base/PDate.h	2010-02-01 19:48:01 UTC (rev 10319)
@@ -186,19 +186,19 @@
 PStream& operator>>(PStream& in, PDate& date);
 
 
-//! Takes a date in cyymmdd format and adds the given number of months (may be negative)
-//! Returns result in CYYMMDD format.  
-inline int CYYMMDD_add_months(int cyymmdd, int nmonths)
+//! Takes a date (in cyymmdd or yyyymmdd format) and adds the given number of months (may be negative)
+//! Returns result in same format.
+inline int add_months_to_date(int xyymmdd, int nmonths)  // x=c or x=yy
 {
-    int cyy  = cyymmdd/10000;
-    int mmdd = cyymmdd%10000;
+    int xyy  = xyymmdd/10000;
+    int mmdd = xyymmdd%10000;
     int mm   = mmdd/100;
     int dd   = mmdd%100;
     
-    int monthpos = cyy*12+(mm-1)+nmonths;
-    cyy = monthpos/12;
+    int monthpos = xyy*12+(mm-1)+nmonths;
+    xyy = monthpos/12;
     mm  = 1+monthpos%12;
-    return cyy*10000+mm*100+dd;
+    return xyy*10000+mm*100+dd;
 }
 
 //! Converts date to float: ex: September 29 1972: 720929; December 25 2002: 1021225



From ducharme at mail.berlios.de  Mon Feb  1 21:26:19 2010
From: ducharme at mail.berlios.de (ducharme at BerliOS)
Date: Mon, 1 Feb 2010 21:26:19 +0100
Subject: [Plearn-commits] r10320 - trunk/python_modules/plearn/gui_tools
Message-ID: <201002012026.o11KQJLx022212@sheep.berlios.de>

Author: ducharme
Date: 2010-02-01 21:26:19 +0100 (Mon, 01 Feb 2010)
New Revision: 10320

Modified:
   trunk/python_modules/plearn/gui_tools/xp_workbench_nogui.py
Log:
Ca now add @FILE argument in order to set hyperparameters from a file.


Modified: trunk/python_modules/plearn/gui_tools/xp_workbench_nogui.py
===================================================================
--- trunk/python_modules/plearn/gui_tools/xp_workbench_nogui.py	2010-02-01 19:48:01 UTC (rev 10319)
+++ trunk/python_modules/plearn/gui_tools/xp_workbench_nogui.py	2010-02-01 20:26:19 UTC (rev 10320)
@@ -37,7 +37,7 @@
 import os.path
 import sys
 import threading
-from   datetime import datetime
+import datetime
 
 ## Traits
 from enthought.traits.api          import *
@@ -180,8 +180,7 @@
           instance giving, among other things, an experiment directory and
           facility to create Matplotlib figures to be added to the workbench.
 
-        - gui: Either a boolean, or if '__AUTO__', taken from the
-          command-line switch --no-gui or --gui.
+        - gui: Should be "False" (kept only for back-compatibility)
         """
         assert(not gui)
         ## Instantiate the params container if a class was passed
@@ -206,10 +205,29 @@
         'params' (and the classes contained therin) inherits from
         HasStrictTraits so that any assignment to inexistant options raises
         an exception.
+
+        If an argument starts with an '@'-sign, it is intrepreted as a filename
+        containing extra arguments to insert in the list of arguments. The file is
+        opened, and each line that doesn't start with a '#'-sign is taken as a new 
+        argument. These argument are inserted in order, where the @filename directive
+        was found, with said @filename directive being removed from the list of 
+        arguments. It is possible to use this multiple times: @filename2 @filename2
         """
+
+        # First replace all @filename by their contents
+        expanded_argv = []
         for arg in argv:
+            if arg.startswith('@'):
+                f = open(arg[1:], 'rU')
+                expanded_argv.extend(line.strip() for line in f if not line.startswith('#'))
+                f.close()
+            else:
+                expanded_argv.append(arg)
+
+        for arg in expanded_argv:
             if arg.startswith('-'):
                 continue
+
             if '=' in arg:
                 (k,v) = arg.split('=', 1)
                 v = v.replace("'", "\\'")
@@ -241,7 +259,7 @@
     def expdir_name(expdir_root, expdir=None):
         """Return an experiment directory from a root location and possibly a dir name."""
         if expdir is None or expdir == '':
-            expdir = datetime.now().strftime("expdir_%Y%m%d_%H%M%S")
+            expdir = datetime.datetime.now().strftime("expdir_%Y%m%d_%H%M%S")
         return os.path.join(expdir_root, expdir)
 
 
@@ -340,3 +358,4 @@
 
     ExperimentWorkbench().run(AllOpt, f)
     
+# vim: filetype=python:expandtab:shiftwidth=4:tabstop=8:softtabstop=4 :



From ducharme at mail.berlios.de  Mon Feb 15 20:22:35 2010
From: ducharme at mail.berlios.de (ducharme at BerliOS)
Date: Mon, 15 Feb 2010 20:22:35 +0100
Subject: [Plearn-commits] r10321 - trunk/plearn/vmat
Message-ID: <201002151922.o1FJMZsk025920@sheep.berlios.de>

Author: ducharme
Date: 2010-02-15 20:22:34 +0100 (Mon, 15 Feb 2010)
New Revision: 10321

Modified:
   trunk/plearn/vmat/VMatrix.cc
Log:
Add remote method "saveAllStringMappings".


Modified: trunk/plearn/vmat/VMatrix.cc
===================================================================
--- trunk/plearn/vmat/VMatrix.cc	2010-02-01 20:26:19 UTC (rev 10320)
+++ trunk/plearn/vmat/VMatrix.cc	2010-02-15 19:22:34 UTC (rev 10321)
@@ -369,6 +369,12 @@
          ArgDoc ("val", "numeric value")));
 
     declareMethod(
+        rmm, "setStringMapping", &VMatrix::setStringMapping,
+        (BodyDoc("Set the string->real mapping for a given column.\n"),
+         ArgDoc ("col", "column number"),
+         ArgDoc ("map", "map of string->real")));
+
+    declareMethod(
         rmm, "getStringToRealMapping", &VMatrix::getStringToRealMapping,
         (BodyDoc("Get the string->real mapping for a given column.\n"),
          ArgDoc ("col", "column number"),
@@ -385,6 +391,10 @@
         (BodyDoc("Set this vmatrix's meta-info from another vmatrix\n"),
          ArgDoc ("vm", "the other vmatrix")));
 
+    declareMethod(
+        rmm, "saveAllStringMappings", &VMatrix::saveAllStringMappings,
+        (BodyDoc("Save this vmatrix's string mapping infos\n")));
+
 }
 
 



From chrish at mail.berlios.de  Wed Feb 17 17:36:31 2010
From: chrish at mail.berlios.de (chrish at BerliOS)
Date: Wed, 17 Feb 2010 17:36:31 +0100
Subject: [Plearn-commits] r10322 - trunk
Message-ID: <201002171636.o1HGaVNf021938@sheep.berlios.de>

Author: chrish
Date: 2010-02-17 17:36:23 +0100 (Wed, 17 Feb 2010)
New Revision: 10322

Modified:
   trunk/pymake.config.model
Log:
Fix path for MKL install at ApSTAT.

Modified: trunk/pymake.config.model
===================================================================
--- trunk/pymake.config.model	2010-02-15 19:22:34 UTC (rev 10321)
+++ trunk/pymake.config.model	2010-02-17 16:36:23 UTC (rev 10322)
@@ -881,7 +881,7 @@
 
 pymakeLinkOption( name = 'apintelblas',
               description = 'Intel BLAS+LAPACK for generic install in /usr/local/lib (incl. ApSTAT)',
-              linkeroptions = '-L/home/chrish/mkl/install/lib/32 -lmkl_lapack -lmkl -lguide -lpthread' )
+              linkeroptions = '-lmkl_lapack -lmkl -lguide -lpthread' )
 
 pymakeLinkOption( name = 'veclib',
               description = "Apple's vecLib library, a version of the BLAS library for the G4 and G5 under OS X",



